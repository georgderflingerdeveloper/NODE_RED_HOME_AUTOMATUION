const{StateMachine:StateMachine}=require("./statemachine.js"),{distinctUntilChanged:distinctUntilChanged,tap:tap}=require("rxjs/operators"),_=require("lodash"),FSM_NAME="finite-state-machine";module.exports=function(t){t.nodes.registerType(FSM_NAME,function(e){t.nodes.createNode(this,e);var i=this,a=this.context();try{a.machine=new StateMachine(JSON.parse(e.fsmDefinition)),s(a.machine.getState().status)}catch(t){return i.status({fill:"red",shape:"ring",text:"no valid definitions"}),void i.warn("no valid definitions")}function n(t=null){i.send([t])}function s(t){i.status({fill:"green",shape:"dot",text:"state: "+t})}a.allChangeListener=a.machine.observable.pipe(e.sendStateWithoutChange?tap():distinctUntilChanged((t,e)=>_.isEqual(t.state,e.state))).subscribe(({state:t})=>{s(t.status),n({topic:"state",payload:t})}),e.sendInitialState&&setTimeout(()=>{n({topic:"state",payload:a.machine.getState()})},100),i.on("input",function(t){if("reset"===t.topic)a.machine.reset();else{var n={type:t.topic,data:_.isObject(t.payload)?t.payload:{}};try{a.machine.triggerAction(n)}catch(a){e.showTransitionErrors&&i.error({code:a.code,msg:a.message},t)}}}),i.on("close",function(){a.stateChangeListener.unsubscribe()})})};